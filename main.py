import telebot
import config
import keyboard
import parss
from data_chek import chek
from colorama import Fore
from requests import exceptions

'''
   _____/ /_____ ___________   _________  / __/ __/__  ___
  / ___/ __/ __ `/ ___/ ___/  / ___/ __ \/ /_/ /_/ _ \/ _ /
 (__  ) /_/ /_/ / /  (__  )  / /__/ /_/ / __/ __/  __/  __/
/____/\__/\__,_/_/  /____/   \___/\____/_/ /_/  \___/\___/
'''



token = '5650906424:AAEd1pu_F61aYY5gQTxeQlzqsYCSnaCaLOM'


bot = telebot.TeleBot(token, parse_mode = None, threaded= False )


#–ü—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start',])
def send_welcome(message):
	bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç —è —Ä–∞–±–æ—á–∏–π –±–æ—Ç stars coffee ‚òïÔ∏è",reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard()) 


@bot.message_handler(commands=['help',])
def send_help(message):
	bot.send_message(message.chat.id, '''/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –ü–æ–º–æ—â—å
/autocast - –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫—É
/coffee_house_registered - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ—Ñ–µ–π–Ω (–î–ª—è –ê–¥–º–∏–Ω–∞)
/coffee_house_delete -—É–¥–∞–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ–π–Ω (–î–ª—è –ê–¥–º–∏–Ω–∞)
/worker_registered -—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
/worker_deleted -—É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤''',reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard()) 


#–∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞
@bot.message_handler(commands=['autocast',])
def send_autocast(message):
	bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞ ")
	bot.register_next_step_handler(message, reg_autocast)

def reg_autocast(message):
	record_in_config(message.text)
	if chek.chek_Yk_password(config.password_YK) == True:
		config.user_id = message.from_user.id
		parss.sq.update.update_user_id(config.user_id,config.COFFE_HOUSE_NAME)
		bot.send_message(message.chat.id,'–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
	else:
		invalid_password(message)
	


#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ—Ñ–µ–µ–Ω
@bot.message_handler(commands=['coffee_house_registered',])
def reg(message):
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –õ–æ–≥–∏–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		bot.register_next_step_handler(message, login)

def login(message):
	if message.text == '–ù–ê–ó–ê–î':
		bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –ù–ê–ó–ê–î –µ—â—ë —Ä–∞–∑ ")
		bot.register_next_step_handler(message,send_welcome)
	else:
		config.admin.admin_login = message.text
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ü–∞—Ä–æ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		bot.register_next_step_handler(message, chek_login_and_password)

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def chek_login_and_password(message):
	config.admin.admin_password = str(message.text)
	if parss.sq.select.chek(config.admin.admin_login,config.admin.admin_password) == True:
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ù–∞–∑–≤–∞–Ω–∏–µ –ö–æ—Ñ–µ–π–Ω–∏")
		bot.register_next_step_handler(message, reg_coffee_house)
	else:
		bot.send_message(message.chat.id, "–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π ü§®")
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –õ–æ–≥–∏–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ù–ê–ó–ê–î –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏")
		bot.register_next_step_handler(message, login)


def reg_coffee_house(message):
	config.COFFE_HOUSE_NAME = str(message.text)
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –£–ö–ê")
	bot.register_next_step_handler(message, reg_YK)


def reg_YK(message):
	config.YK_NAME = str(message.text)
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ü–∞—Ä–æ–ª—å –£–ö–ê")
	bot.register_next_step_handler(message, reg_YK_password)

def reg_YK_password(message):
	config.password_YK = str(message.text)
	parss.sq.insert.insert_coffee_house(config.COFFE_HOUSE_NAME,config.YK_NAME,config.password_YK)
	bot.send_message(message.chat.id, "–ö–æ—Ñ–µ–π–Ω—è —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞")

#—É–¥–∞–ª–µ–Ω–∏–µ –∫–æ—Ñ–µ–π–Ω–∏
@bot.message_handler(commands=['coffee_house_delete',])
def reg1(message):
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –õ–æ–≥–∏–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		bot.register_next_step_handler(message, login1)

def login1(message):
	if message.text == '–ù–ê–ó–ê–î':
		bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –ù–ê–ó–ê–î –µ—â—ë —Ä–∞–∑ ")
		bot.register_next_step_handler(message,send_welcome)
	else:
		config.admin.admin_login = message.text
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ü–∞—Ä–æ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		bot.register_next_step_handler(message, chek_login_and_password1)

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def chek_login_and_password1(message):
	config.admin.admin_password = str(message.text)
	if parss.sq.select.chek(config.admin.admin_login,config.admin.admin_password) == True:
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ù–∞–∑–≤–∞–Ω–∏–µ –ö–æ—Ñ–µ–π–Ω–∏")
		bot.register_next_step_handler(message, delete_coffee_house)
	else:
		bot.send_message(message.chat.id, "–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π ü§®")
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –õ–æ–≥–∏–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ù–ê–ó–ê–î –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏")
		bot.register_next_step_handler(message, login1)

def delete_coffee_house(message):
	config.COFFE_HOUSE_NAME = str(message.text)
	mes = parss.sq.delete.delete_coffe_house(config.COFFE_HOUSE_NAME)
	bot.send_message(message.chat.id,"–ö–æ—Ñ–µ–π–Ω—è —É–¥–∞–ª–µ–Ω–Ω–∞ ")

#—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
@bot.message_handler(commands=['worker_registered',])

def protect(message):
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞ ")
	bot.register_next_step_handler(message, name_worker)

def name_worker(message):
	if chek.chek_Yk_password(message.text) == True:
		config.COFFE_HOUSE_NAME = parss.sq.select.get_coffee_house(message.text)
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ü–∞—Ä—Ç–Ω–µ—Ä–∞ ")
		bot.register_next_step_handler(message, contact_worker)
	else:
		invalid_password(message)


def contact_worker(message):
	config.FIO_WORKER = str(message.text)
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX üì±")
	bot.register_next_step_handler(message, post_wprcers)

def post_wprcers(message):
	if chek.chek_contact(message.text) == True:
		config.CONTACT_WORKERS = str(message.text)
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞")
		bot.register_next_step_handler(message, fin_reg)
	else:
		bot.send_message(message.chat.id, '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω –≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX üì±")
		bot.register_next_step_handler(message, post_wprcers)


def fin_reg(message):
	config.post= str(message.text)
	bot.send_message(message.chat.id, "–ü–∞—Ä—Ç–Ω–µ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
	parss.sq.insert.insert_worker(config.FIO_WORKER,config.COFFE_HOUSE_NAME,config.post,config.CONTACT_WORKERS)


#—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
@bot.message_handler(commands=['worker_deleted',])
def delete_worker(message):
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞ ")
	bot.register_next_step_handler(message, delete_workers_2)

def delete_workers_2(message):
	record_in_config(message.text)
	if chek.chek_Yk_password(config.password_YK) == True:
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–∞—Ä—Ç–Ω–µ—Ä–∞")
		bot.register_next_step_handler(message, delete_workers_3)
	else:
		invalid_password(message)

def delete_workers_3(message):
	parss.sq.delete.delete_workers(config.COFFE_HOUSE_NAME,message.text)
	bot.send_message(message.chat.id,'–ü–∞—Ä—Ç–Ω–µ—Ä –±—ã–ª —É–¥–∞–ª—ë–Ω')

@bot.message_handler(content_types=['sticker'])
def stick(message):
	bot.send_message(message.chat.id,'–≠—Ç–æ –∫–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä )))')


#–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –Ω–µ–∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
@bot.message_handler(content_types=['text'])
def text_handler(message):
	match message.text:
		case '–ü—Ä–∏–≤–µ—Ç':
			bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç —è —Ä–∞–±–æ—á–∏–π –±–æ—Ç –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É help ")
		case'–í—ã–±—Ä–∞—Ç—å –∑–∞–º–µ–Ω—É üóÑ':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞")
			bot.register_next_step_handler(message, select_rep_for_mes)
		case '–ó–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ–Ω—É üìù':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞")
			bot.register_next_step_handler(message, fio_workers)
		case '–í–∑—è—Ç—ã–µ –∑–∞–º–µ–Ω—ã üìä':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞")
			bot.register_next_step_handler(message, select_choosed_replacemenr)
		case "–û—Ç–¥–∞–Ω–Ω—ã–µ –∑–∞–º–µ–Ω—ã üëê":
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞")
			bot.register_next_step_handler(message, sele—Å–µ_my_rep)
		case '–¢—Ä–µ–±—É–µ–º—ã–µ –∑–∞–º–µ–Ω—ãüîñ':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –£–ö–∞")
			bot.register_next_step_handler(message, demanding_replecement)
		case '–ù–∞–∑–∞–¥ üîô':
			send_welcome(message)
		case _:
			bot.send_message(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª')

#–¢—Ä–µ–±—É–µ–º—ã–µ –∑–∞–º–µ–Ω—ã
def demanding_replecement(message):
	record_in_config(message.text)
	if chek.chek_Yk_password(config.password_YK) == True:
		bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å",reply_markup= keyboard.keyboard.non_inline_keyboard.demanding_replecement_keyboard())
		bot.register_next_step_handler(message, demanding_replecement_text)
	else:
		invalid_password(message)

def demanding_replecement_text(message):
	match message.text:
		case '–ó–∞–ø–∏—Å–∞—Ç—å üìù':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ç—Ä–µ–±—É–µ–º–æ–π –∑–∞–º–µ–Ω—ã", reply_markup= None)
			bot.register_next_step_handler(message, demanding_day) 
		case'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üóÑ':
			try:
				bot.send_message(message.chat.id, parss.sq.select.select_demanding_replacement(),reply_markup= keyboard.keyboard.non_inline_keyboard.demanding_replecement_keyboard2())
				bot.register_next_step_handler(message, text_demanding_replecement) 
			except telebot.apihelper.ApiTelegramException:
				bot.send_message(message.chat.id,"–ü–æ—Ö–æ–∂–µ —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–º–µ–Ω—ã")
		case '–ù–∞–∑–∞–¥ üîô':
			send_welcome(message)

def text_demanding_replecement(message):
	match message.text:
		case '–£–¥–∞–ª–∏—Ç—å üìù':
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏',reply_markup= None)
			bot.register_next_step_handler(message, delete_demanding_replecrmrnt)
		case '–ù–∞–∑–∞–¥ üîô':
			send_welcome(message)

def delete_demanding_replecrmrnt(message):
	if chek.chek_iddm(message.text) == True:
		if chek.chek_coffe_house_name_for_rep(message.text,config.COFFE_HOUSE_NAME,2) == True:
			parss.sq.delete.delete_demanding_replacment(message.text)
			bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ–º–∞—è –∑–∞–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∞',reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())
		else:
			bot.send_message(message.chat.id, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —á—É–∂—É—é –∑–∞–º–µ–Ω—É',reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())
	else:
		bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–π id –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∏–ª–∏ –∂–µ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω –≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")

#–ó–∞–ø–∏—Å—å —Ç—Ä–µ–±—É–µ–º–æ–π –∑–∞–º–µ–Ω—ã
def demanding_day(message):
	config.demanding_replecement.date = message.text
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Ç—Ä–µ–±—É–µ–º–æ–π –∑–∞–º–µ–Ω—ã", reply_markup= None)
	bot.register_next_step_handler(message, demanding_post) 

def demanding_post(message):
	if message.text == '–ù–∞–∑–∞–¥ üîô':
		send_welcome(message)
	else:
		config.demanding_replecement.demanding_post = message.text
		bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –¥–ª—è —Ç—Ä–µ–±—É–µ–º–æ–π –∑–∞–º–µ–Ω—ã", reply_markup= None)
		bot.register_next_step_handler(message, finish_demanding_replecement) 

def finish_demanding_replecement(message):
	if message.text == '–ù–∞–∑–∞–¥ üîô':
		send_welcome(message)
	else:
		bot.send_message(message.chat.id, "–¢—Ä–µ–±—É–µ–º–∞—è –∑–∞–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∞–Ω–∞", reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())
		parss.sq.insert.insert_demanding_replacement(config.demanding_replecement.date,parss.sq.select.get_coffee_house(config.password_YK),config.demanding_replecement.demanding_post,message.text)




#–í–´–ë–û–† –ó–ê–ú–ï–ù–´
def select_rep_for_mes(message):
	record_in_config(message.text)
	try:
		if chek.chek_Yk_password(config.password_YK) == True:
			mes = parss.sq.select.select_replacement()
			bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∏—Ç–µ –∑–∞–º–µ–Ω—É –∑–∞–ø–∏—Å–∞–≤ id –∑–∞–ø–∏—Å–∏")
			bot.send_message(message.chat.id, mes, reply_markup= keyboard.keyboard.non_inline_keyboard.back_keyboard())
			bot.register_next_step_handler(message, choose_replacement)
		else:
			invalid_password(message)
	except telebot.apihelper.ApiTelegramException:
		bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∑–∞–º–µ–Ω –Ω–µ—Ç—É",reply_markup= keyboard.keyboard.non_inline_keyboard.back_keyboard())
		bot.register_next_step_handler(message, choose_replacement)

def choose_replacement(message):
	id = message.text
	if id == '–ù–∞–∑–∞–¥ üîô':
		send_welcome(message)
	else:
		if chek.chek_coffe_house_name_for_rep(id,config.COFFE_HOUSE_NAME,1) == True:
			if chek.chek_id(id) == True:
				parss.sq.update.update_replacement(message.text,config.COFFE_HOUSE_NAME)
				config.replecemt = parss.sq.select.select_replacementByID(id)
				autocoast(id)
				bot.send_message(message.chat.id, "–ó–∞–º–µ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞",reply_markup= keyboard.keyboard.non_inline_keyboard.back_keyboard())
			else:
				bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–π id –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∏–ª–∏ –∂–µ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω –≤ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ",reply_markup= keyboard.keyboard.non_inline_keyboard.back_keyboard())
		else:
			bot.send_message(message.chat.id, "–ó–∞–º–µ–Ω–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Å–≤–æ–µ–≥–æ –∂–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞")
			bot.send_sticker(message.chat.id,"CAACAgEAAxkBAAEGS0hjY33rRTmMu1a9trHGfj5AQIOfWAACKwIAAjbd2UeL36EJdj6f4ioE",reply_markup= keyboard.keyboard.non_inline_keyboard.back_keyboard())

#–ó–ê–ü–ò–°–¨ –ó–ê–ú–ï–ù–´
def fio_workers(message):
	record_in_config(message.text)
	if chek.chek_Yk_password(config.password_YK) == True:
		bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ü–∞—Ä—Ç–Ω–µ—Ä–∞",reply_markup= keyboard.keyboard.inline.main_menu_keyboard())
	else:
		invalid_password(message)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	config.chosen.fio_worker_chosen = str(call.data)
	if call.data in config.fio:
		bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text="–í–≤–µ–¥–∏—Ç–µ –í—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –ü–∞—Ä—Ç–Ω–µ—Ä–∞ ‚è≥ ",reply_markup= None)
		bot.register_next_step_handler(call.message,rep_day)

def rep_day (message):
	config.chosen.time_line = message.text
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∑–∞–º–µ–Ω—ã")
	bot.register_next_step_handler(message,rep_comments)

def rep_comments(message):
	config.day = message.text
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
	bot.register_next_step_handler(message,rep_finished)


def rep_finished(message):
	parss.sq.insert.insert_replacement(config.chosen.fio_worker_chosen,config.COFFE_HOUSE_NAME,parss.sq.select.select_replacement_post(config.COFFE_HOUSE_NAME,config.chosen.fio_worker_chosen ),parss.sq.select.select_replacement_contact(config.COFFE_HOUSE_NAME,config.chosen.fio_worker_chosen ),config.chosen.time_line,config.day, message.text)
	bot.send_message(message.chat.id, "–ó–∞–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ üëç")


#–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∑—è—Ç—ã—Ö –∑–∞–º–µ–Ω
def select_choosed_replacemenr(message):
	record_in_config(message.text)
	if chek.chek_Yk_password(config.password_YK) == True:
		try:
			bot.send_message(message.chat.id,parss.sq.select.select_choosed_replacement(config.COFFE_HOUSE_NAME),reply_markup= keyboard.keyboard.non_inline_keyboard.choosed_rep_keyboard())
			bot.register_next_step_handler(message,text_hendler_for_choosed_rep)
		except telebot.apihelper.ApiTelegramException:
			bot.send_message(message.chat.id,'–ü–æ—Ö–æ–∂–µ —á—Ç–æ –≤—ã –Ω–µ –≤–∑—è–ª–∏ –Ω–µ –æ–¥–Ω–æ–π –∑–∞–º–µ–Ω—ã ',reply_markup= None)
	else:
		invalid_password(message)

def text_hendler_for_choosed_rep(message):
	match message.text:
		case '–í–µ—Ä–Ω—É—Ç—å –∑–∞–º–µ–Ω—É –≤ –æ–±—â–∏–π –ª–∏—Å—Ç –∑–∞–º–µ–Ω':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –∑–∞–º–µ–Ω—ã")
			bot.register_next_step_handler(message, select_status_of_rep)
		case '–ù–∞–∑–∞–¥ üîô':
			send_welcome(message)
		

def select_status_of_rep(message):
	parss.sq.update.update_choosed_replacement(config.COFFE_HOUSE_NAME,message.text)
	config.replecemt = parss.sq.select.select_replacementByID(message.text)
	autocoast2(message.text)
	bot.send_message(message.chat.id, "–ó–∞–º–µ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–∞ ", reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())

#–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–¥–∞–Ω—ã—Ö –∑–∞–º–µ–Ω
def sele—Å–µ_my_rep(message):
	record_in_config(message.text)
	
	if chek.chek_Yk_password(config.password_YK) == True:
		mes =parss.sq.select.select_my_replacement(config.COFFE_HOUSE_NAME)
		try:
			bot.send_message(message.chat.id,mes,reply_markup= keyboard.keyboard.non_inline_keyboard.delete_key())
			bot.register_next_step_handler(message,text_select_my_rep)
		except telebot.apihelper.ApiTelegramException:
			bot.send_message(message.chat.id,'–ü–æ—Ö–æ–∂–µ —á—Ç–æ –≤—ã –Ω–µ –æ—Ç–¥–∞–≤–∞–ª–∏ –∑–∞–º–µ–Ω',reply_markup= None)
	else:
		invalid_password(message)

def text_select_my_rep(message):
	match message.text:
		case '–£–¥–∞–ª–∏—Ç—å –ó–∞–º–µ–Ω—É üóë':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –∑–∞–º–µ–Ω—ã")
			bot.register_next_step_handler(message, delete_my_replecement)
		case '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –∑–∞–º–µ–Ω—ã üìÜ':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –∑–∞–º–µ–Ω—ã")
			bot.register_next_step_handler(message, get_new_date)
		case '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã‚è≥':
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –∑–∞–º–µ–Ω—ã")
			bot.register_next_step_handler(message, get_new_time)
		case '–ù–∞–∑–∞–¥ üîô':
			send_welcome(message)

#–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ–Ω—É
def delete_my_replecement(message):
	parss.sq.delete.delete_replacment(message.text,config.COFFE_HOUSE_NAME)
	bot.send_message(message.chat.id, "–ó–∞–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∞",reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())

#–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∑–∞–º–µ–Ω—ã
def get_new_time(message):
	config.id = message.text
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫")
	bot.register_next_step_handler(message,update_time_replacement )

def update_time_replacement(message):
	parss.sq.update.update_time_replacement(config.id,message.text)
	bot.send_message(message.chat.id,"–í—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∏–∑–º–µ–Ω—ë–Ω",reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())

#—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É
def get_new_date(message):
	config.id = message.text
	bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É")
	bot.register_next_step_handler(message,update_date_replacement )

def update_date_replacement(message):
	parss.sq.update.update_date_replacement(config.id,message.text)
	bot.send_message(message.chat.id,"–î–∞—Ç–∞ –∏–∑–º–µ–Ω–∏–Ω–∞",reply_markup= keyboard.keyboard.non_inline_keyboard.main_keyboard())

#–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
def invalid_password(message):
	bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π ü§® ")
	bot.send_sticker(message.chat.id,"CAACAgEAAxkBAAEGS0hjY33rRTmMu1a9trHGfj5AQIOfWAACKwIAAjbd2UeL36EJdj6f4ioE", reply_markup=keyboard.keyboard.non_inline_keyboard.main_keyboard())

#–∑–∞–ø–∏—Å—å –ø–∞—Ä–æ–ª—è –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ—Ñ–µ–π–Ω–∏ 
def record_in_config(password):
	config.password_YK = password
	config.COFFE_HOUSE_NAME = parss.sq.select.get_coffee_house(config.password_YK)
	try:
		config.password_YK = str(config.password_YK)
	except TypeError as erorr:
		config.password_YK = " "

def autocoast(message):
	coffee_house  = parss.sq.select.select_coffee_houseByID(message)
	user_id = parss.sq.select.select_user_id(coffee_house)
	if user_id == None: 
		pass
	else:
		bot.send_message(user_id,'–£ –≤–∞—Å –≤–∑—è–ª–∏ –∑–∞–º–µ–Ω—É')
		bot.send_message(user_id,config.replecemt)

def autocoast2(message):
	coffee_house  = parss.sq.select.select_coffee_houseByID(message)
	user_id = parss.sq.select.select_user_id(coffee_house)
	if user_id == None: 
		pass
	else:
		bot.send_message(user_id,'–∑–∞–º–µ–Ω–∞ –±—ã–ª–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–∞ –≤ –æ–±—â–∏–π –ª–∏—Å—Ç –∑–∞–º–µ–Ω')
		bot.send_message(user_id,config.replecemt)

def main():
	try:
		print(Fore.GREEN + "start")
		bot.polling()
	except exceptions.ConnectionError as eror:
		print(Fore.RED + '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É')

	
if __name__ == "__main__":
	main()